server:
  port: 8443 # The default ports are 8080 for HTTP and 8443 for HTTPS.

# spring starter web and spring cloud gateway are not compatible

# credentials to access discovery-service
app:
  eureka-username: admin
  eureka-password: admin
  eureka-server: localhost

## Since it uses Eureka to find microservices to route traffic to
## Configure it as a client
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/
#    initialInstanceInfoReplicationIntervalSeconds: 5
#    registryFetchIntervalSeconds: 5
#  instance:
#    preferIpAddress: true
#    leaseRenewalIntervalInSeconds: 5
#    leaseExpirationDurationInSeconds: 5

spring.application.name: gateway
# predicate - identifies which request to re-route
# uri - route to service ( mention name as in the discovery service)
spring.cloud.gateway:
  routes:
  - id: product-composite
    uri: http://composite:8083
    predicates:
      - Path=/productComposite/**

  - id: product-composite-swagger-ui
    uri: http://composite:8083
    predicates:
      - Path=/openapi/**
# NOT IN USE in the cluster
#  - id: eureka-api
#    uri: http://${app.eureka-server}:8761
#    predicates:
#      - Path=/eureka/api/{segment}
#    filters:
#      - SetPath=/eureka/{segment}
#
#  - id: eureka-web-start
#    uri: http://${app.eureka-server}:8761
#    predicates:
#      - Path=/eureka/web
#    filters:
#      - SetPath=/
#
#  - id: eureka-web-other
#    uri: http://${app.eureka-server}:8761
#    predicates:
#      - Path=/eureka/**

  - id: review
    uri: http://review
    predicates:
      - Path=/review/**

  - id: product
    uri: http://product:8081
    predicates:
      - Path=/product/**

  - id: auction
    uri: http://auction:8084
    predicates:
      - Path=/auction/**

  - id: auth-server
    uri: http://auth-server:80
    predicates:
      - Path=/auth/**

  - id: config-server
    uri: ${spring.cloud.config.uri}
    predicates:
      - Path=/config/**
    filters:
      - RewritePath=/config/(?<segment>.*), /$\{segment}
    # will remove the leading part, /config, from the incoming
    # URL before it sends it to the config server.

management.endpoint.gateway.enabled: true
management.endpoint.health.show-details: "ALWAYS"

logging:
  level:
    root: ERROR
    org.springframework.cloud.gateway: INFO
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: ERROR

# to configure gateway to use the certificate and HTTPS
server.ssl:
  key-store-type: PKCS12 #  format for storing or transporting a user's private keys, certificates
  key-store: classpath:keystore/edge.p12
  key-store-password: password
  key-alias: localhost

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_ISSUER_URI:https://localhost:30443/auth/public/login}
          audience: ${AUTH_AUDIENCE:https://dev-mqzx0ckhfl41mzxd.jp.auth0.com/}
---
spring.config.activate.on-profile: docker

app:
  eureka-server: discovery