version: '3.9'

services:
  product:
    container_name: product
    build: ./product-service
    mem_limit: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - discovery
    ports:
      - "8081:8081"

  review:
    container_name: review
    build: ./review-service
    mem_limit: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - discovery
    ports:
      - "8082:8082"

  composite:
    container_name: composite
    build: ./product-composite-service
    mem_limit: 512M
    depends_on:
      - discovery
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  mongodb:
    container_name: mongo
    image: mongo:6.0.4
    mem_limit: 512m
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongostat -n 1"
      interval: 5s
      timeout: 2s
      retries: 60

  mysql:
    container_name: mysql
    image: mysql:8.0.32
    mem_limit: 512m
    volumes:
      - sqldata:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=joice
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=reviewdb
    healthcheck:
      test: "mysql -u root -p$$MYSQL_ROOT_PASSWORD  -e 'SHOW DATABASES'"
      interval: 5s
      timeout: 2s
      retries: 60

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.1
    restart: always
    mem_limit: 1024m
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.1
    restart: always
    mem_limit: 512m
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    mem_limit: 512m
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'

  discovery:
    container_name: discovery
    build: ./discovery-service
    mem_limit: 512m
    ports:
    - "8761:8761"

  gateway:
    container_name: gateway
    build: ./gateway-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      auth-server:
        condition: service_healthy
    ports:
      - "8443:8443"

#  auth-server:
#    container_name: auth-server
#    build: ./authorization-server
#    mem_limit: 512M
#    ports:
#      - "9999:9999"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      - discovery
#    healthcheck:
#      test: [ "CMD", "curl", "-fs", "http://localhost:9999/actuator/health" ]
#      interval: 5s
#      timeout: 2s
#      retries: 60

volumes:
  sqldata:
  mongodata:

