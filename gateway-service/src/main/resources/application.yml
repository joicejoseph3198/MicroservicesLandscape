server:
  port: 8888

management.endpoint.gateway.enabled: true
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: INFO

# Since it uses Eureka to find microservices to route traffic to
# Configure it as a client
app.eureka-server: localhost
eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring.application.name: gateway
# predicate - identifies which request to re-route
# uri - route to service ( mention name as in the discovery service)
spring.cloud.gateway.routes:

  - id: product-composite
    uri: lb://COMPOSITE
    predicates:
      - Path=/productComposite/**

  - id: product-composite-swagger-ui
    uri: lb://COMPOSITE
    predicates:
      - Path=/openapi/**

  - id: eureka-api
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/api/{segment}
    filters:
      - SetPath=/eureka/{segment}

  - id: eureka-web-start
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/web
    filters:
      - SetPath=/

  - id: eureka-web-other
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/**

  - id: review
    uri: lb://REVIEW
    predicates:
      - Path=/review/**

  - id: product
    uri: lb://PRODUCT
    predicates:
      - Path=/product/**


---
spring.config.activate.on-profile: docker

app.eureka-server: discovery